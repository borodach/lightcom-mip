////////////////////////////////////////////////////////////////////////////////
//                                                                            
//  File:           ISettingsStorage.cs
//
//  Facility:       Хранение настроек.
//
//
//  Abstract:       Модуль содержит определение интерфейса, выполняющего
//                  сохранение и загрузку настроек. 
//
//  Environment:    VC# 7.1
//
//  Author:         Зайцев С. А.
//
//  Creation Date:  13/09/2005
//
////////////////////////////////////////////////////////////////////////////////

using System;

namespace GPS.Common
{

///
/// <summary>
/// Содержит методы для соранения/загрузки именованных параметров.
/// Каждый параметр имеет тип, имя и значение. Поддерживаются только
/// текстовые значения. 
/// </summary>
/// 

public interface ISettingsStorage 
{

//////////////////////////////////////////////////////////////////////////////// 
/// 
/// <summary>
/// Выполняет инициализацию объекта - все данные сбрасываются в 
/// начальное состояние.
/// </summary>
/// 
//////////////////////////////////////////////////////////////////////////////// 

void Reset ();


//////////////////////////////////////////////////////////////////////////////// 
/// 
/// <summary>
/// Если реализация интерфейса поддерживает буферизацию записи, то
/// метод сбрасывает содержимое буфера в реальное хранилище.
/// </summary>
/// <returns>
/// Возвращает true, если сброс кэша прошел успешно.
/// </returns>
/// 
//////////////////////////////////////////////////////////////////////////////// 

bool Flush ();

//////////////////////////////////////////////////////////////////////////////// 
/// 
/// <summary>
/// Выполняет инициализацию, необходимую для загрузки данных.
/// </summary>
/// <returns>
/// Возвращает true, если инициализация прошла успешно.
/// </returns>
/// 
//////////////////////////////////////////////////////////////////////////////// 

bool PreLoad ();

//////////////////////////////////////////////////////////////////////////////// 
/// 
/// <summary>
/// Сохраняет параметр.
/// </summary>
/// <param name="strType">IN Название типа/категории параметра</param>
/// <param name="strName">IN Название параметра</param>
/// <param name="strValue">IN Значение параметра</param>
/// <returns>Возвращает true, если запись прошла успешно.</returns>
/// 
//////////////////////////////////////////////////////////////////////////////// 

bool Write (string strType, 
    string strName, 
    string strValue);

//////////////////////////////////////////////////////////////////////////////// 
/// 
/// <summary>
/// Читает значение.
/// </summary>
/// <param name="strType">IN Название типа/категории параметра</param>
/// <param name="strName">IN Название параметра</param>
/// <param name="strValue">OUT Значение параметра</param>
/// <returns>Возвращает true, если чтение прошло успешно.</returns>
/// 
//////////////////////////////////////////////////////////////////////////////// 

bool Read (string strType, 
    string strName, 
    out string strValue);
}
}